[{"content":"使用hugo搭建网站 前期准备 1）安装go语言 从All releases - The Go Programming Language下载.msi安装包，并安装到选定目录下。\n在终端输入go version以验证安装成功。\n2）安装hugo 在Releases · gohugoio/hugo下载hugo，然后讲hugo.exe所在目录添加至系统环境变量Path下。\n在终端输入hugo version验证。\n网站部署 1）创建一个新网站 hugo new site page-name\n2）配置主题 在Complete Lists | Hugo Themes里挑选喜欢的主题，并输入以下代码配置：\n1 2 3 cd page-name git init git submodule add web-URL-or-ssh-key themes/theme-name 使用 Visual Studio Code 打开网站所在目录，在网站配置文件config.toml中输入：\ntheme = \u0026quot;theme-name\u0026quot;\n3）添加内容 输入代码添加内容：\nhugo new posts/post-name.md\n关于Markdown语言的语法可以在Markdown 官方教程中查看: markdown官网\n成果查看 输入代码启动Hugo服务器：hugo server -D\n我们可以在http://localhost:1313/.查看创建我网页。\n此时，我们仍可以对网站进行修改，所作的修改将同步呈现在网页中。\n输入hugo -D生成静态网页，网站的支持文件将输出在./public/目录下。\n同步到Github远程库 1）在Github上建立远程库 在Github上新建仓库 username.github.io，username 即 Github 用户名。\n2）从本地上传到远程库 转到public目录，提交内容到缓冲区，连接远程库后推送至master分支。\n1 2 3 4 5 6 cd public git init git add . git commit -m \u0026#34;message\u0026#34; git remote add origin https://github.com/user-name/user-name.github.io.git git push -u origin master 3）更新到Github远程库 转到public目录，提交内容到缓冲区后推送至master分支。\n1 2 3 4 5 cd .\\Desktop\\Solal2600.github.io-creator\\ hugo -D cd public git add . git commit -m \u0026#34;message\u0026#34; 推送 git push -u origin master\n","date":"2023-06-14T16:54:43+08:00","image":"https://solal2600.github.io/category_web.jpg","permalink":"https://solal2600.github.io/webbuild1/","title":"网站搭建笔记"},{"content":"","date":"2023-06-13T22:43:46+08:00","image":"https://solal2600.github.io/category_write.jpg","permalink":"https://solal2600.github.io/killingmuse/","title":"缪斯之死"},{"content":" 2023年6月12日 2023年6月13日 2023年6月13日 ","date":"2023-06-12T15:03:44+08:00","image":"https://solal2600.github.io/cover_walden.jpeg","permalink":"https://solal2600.github.io/readwalden/","title":"READING 《WALDEN》"},{"content":" 一、前期准备 注意事项 以下所指的 地面站 ，可以理解为开发者个人电脑通过虚拟机所使用的Ubuntu系统。 以下所指的 Nano , 可以理解为Jetson Nano所使用的Ubuntu系统。 打开 终端 快捷键：Ctrl + Alt + T 连接局域网 开启路由器，将Nano和地面站都连入该路由器生成的局域网。\n虚拟机网络设置 打开VMware，在虚拟机Ubuntu关机状态下，打开虚拟机设置-网络适配器-网络连接，选择 桥接模式 ，并勾选“复制网络连接状态”。 二、获取IP地址和设备名称 IP地址 在Nano上打开终端，输入ifconfig，获得IP地址 我们需要的是 wlan0-inet 假设得到IP地址为：198.168.1.2 ，以下简称 NanoIP\n同样的，在地面站打开终端，输入ifconfig，获得IP地址 我们需要的是 ens33-inet 假设得到IP地址为：198.168.1.4 ，以下简称 地面站IP\n设备名称 在终端中，介于“@”和“:”之间的绿色字体，即设备名称。 假设获得以下设备名称： “iaxlab-desktop” ,以下简称 Nano设备名 “solal-virtual-machine” ,以下简称 地面站设备名\n三、配置Nano 修改bashrc文件 在Nano终端输入gedit ~/.bashrc，在bashrc文件最后一行添加：\n1 2 export ROS_HOSTNAME=NanoIP export ROS_MASTER_URI=http://NanoIP:11311` 以上面的NanoIP为例，这里就应该添加：\n1 2 export ROS_HOSTNAME=198.168.1.2 export ROS_MASTER_URI=http://198.168.1.2:11311` 保存bashrc文件，然后在终端输入source ~/.bashrc\n修改hosts文件 在Nano终端输入sudo gedit /etc/hosts，在hosts文件中添加：\n1 地面站IP 地面站设备名 以上面的地面站IP和地面站设备名为例，这里就应该添加：\n1 192.168.1.4 solal-virtual-machine 保存hosts文件\n四、配置地面站 修改bashrc文件 在地面站终端输入gedit ~/.bashrc，在bashrc文件最后一行添加：\n1 2 export ROS_HOSTNAME=地面站IP export ROS_MASTER_URI=http://NanoIP:11311` 以上面的地面站IP和NanoIP为例，这里就应该添加：\n1 2 export ROS_HOSTNAME=198.168.1.4 export ROS_MASTER_URI=http://198.168.1.2:11311` 保存bashrc文件，然后在终端输入source ~/.bashrc\n修改hosts文件 在Nano终端输入sudo gedit /etc/hosts，在hosts文件中添加：\n1 NanoIP Nano设备名 以上面的地面站IP和地面站设备名为例，这里就应该添加：\n1 192.168.1.2 iaxlab-desktop 保存hosts文件\n","date":"2022-09-14T22:50:55+08:00","image":"https://solal2600.github.io/cover_drone.jpg","permalink":"https://solal2600.github.io/drone/","title":"无人机调试"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://docs.stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://solal2600.github.io/cover_helloworld.jpg","permalink":"https://solal2600.github.io/example/","title":"Hello World"}]